import asyncio
import os
import google.generativeai as genai
from aiogram import Bot, Dispatcher, types, F
from aiogram.filters import CommandStart
from aiogram.enums import ChatAction
from dotenv import load_dotenv

# 1. –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è (–Ω–∞—à–∏ –∫–ª—é—á–∏)
load_dotenv()
TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")
GEMINI_API_KEY = os.getenv("GEMINI_API_KEY")

# 2. –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Gemini
genai.configure(api_key=GEMINI_API_KEY)
# –í—ã–±–∏—Ä–∞–µ–º –º–æ–¥–µ–ª—å. 'gemini-1.5-flash' - –±—ã—Å—Ç—Ä–∞—è –∏ –±–µ—Å–ø–ª–∞—Ç–Ω–∞—è
model = genai.GenerativeModel('gemini-2.5-flash')

# 3. –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Aiogram (Telegram Bot)
bot = Bot(token=TELEGRAM_TOKEN)
dp = Dispatcher()

# 4. –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ (–•—ç–Ω–¥–ª–µ—Ä—ã)

# –•—ç–Ω–¥–ª–µ—Ä –Ω–∞ –∫–æ–º–∞–Ω–¥—É /start
@dp.message(CommandStart())
async def send_welcome(message: types.Message):
    await message.reply("–ü—Ä–∏–≤–µ—Ç! –Ø —Ç–≤–æ–π –ª–∏—á–Ω—ã–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç —Å Gemini AI. ü§ñ\n"
                        "–ü—Ä–æ—Å—Ç–æ –∑–∞–¥–∞–π –º–Ω–µ –ª—é–±–æ–π –≤–æ–ø—Ä–æ—Å.")

# –•—ç–Ω–¥–ª–µ—Ä –Ω–∞ –ª—é–±—ã–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è (–∫—Ä–æ–º–µ –∫–æ–º–∞–Ω–¥)
@dp.message(F.text)
async def handle_message(message: types.Message):
    user_text = message.text
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º "–ü–µ—á–∞—Ç–∞–µ—Ç..." –≤ —á–∞—Ç–µ
    await bot.send_chat_action(message.chat.id, ChatAction.TYPING)

    try:
        # 5. –û–±—Ä–∞—â–µ–Ω–∏–µ –∫ API Gemini
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º .generate_content_async –¥–ª—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞
        response = await model.generate_content_async(user_text)
        
        # 6. –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        await message.reply(response.text)

    except Exception as e:
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫, –µ—Å–ª–∏ Gemini –Ω–µ –æ—Ç–≤–µ—Ç–∏–ª
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ Gemini: {e}")
        await message.reply("–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞. üò•"
                            "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")

# 7. –§—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
async def main():
    print("–ë–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
    # –ó–∞–ø—É—Å–∫–∞–µ–º polling (–ø–æ—Å—Ç–æ—è–Ω–Ω—ã–π –æ–ø—Ä–æ—Å Telegram –Ω–∞ –Ω–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è)
    await dp.start_polling(bot)

if __name__ == '__main__':
    asyncio.run(main())
