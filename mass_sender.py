import asyncio
import logging
import argparse
from tqdm import tqdm
from telegram import Bot
from telegram.error import Forbidden

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω—É–∂–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∏–∑ –≤–∞—à–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞
from config import BOT_TOKEN
from database import get_all_active_users, save_user_data

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(name)s - %(levelname)s - %(message)s')
logger = logging.getLogger(__name__)

# –¢–µ–∫—Å—Ç –≤–∞—à–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
MESSAGE_TEXT = """
–ú—ã –æ–±–Ω–æ–≤–∏–ª–∏ –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞ ‚Äî —Ç–µ–ø–µ—Ä—å –æ–Ω —Å—Ç–∞–ª –µ—â–µ —É–¥–æ–±–Ω–µ–µ –∏ –ø–æ–ª–µ–∑–Ω–µ–µ üéâ

–ß—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–æ–ª—É—á–∞—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /start.
(–ò–ª–∏ –Ω–∞–∂–º–∏—Ç–µ ¬´–ú–µ–Ω—é¬ª ‚Üí ¬´üöÄ–ó–∞–ø—É—Å—Ç–∏—Ç—å/–ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞¬ª).

–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –æ—Å—Ç–∞–µ—Ç–µ—Å—å —Å –Ω–∞–º–∏ ‚ú®
"""

async def main(dry_run=False):
    """
    –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ä–∞—Å—Å—ã–ª–∫–∏.
    """
    bot = Bot(token=BOT_TOKEN)
    logger.info("–ù–∞—á–∏–Ω–∞–µ–º —Ä–∞—Å—Å—ã–ª–∫—É...")

    user_ids = await get_all_active_users()
    if not user_ids:
        logger.info("–ê–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")
        return

    total_users = len(user_ids)
    sent_count = 0
    blocked_count = 0

    for user_id in tqdm(user_ids, desc="–†–∞—Å—Å—ã–ª–∫–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å"):
        try:
            if not dry_run:
                await bot.send_message(chat_id=user_id, text=MESSAGE_TEXT)
            sent_count += 1
            logger.info(f"–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}" if not dry_run else f"–°—É—Ö–æ–π –∑–∞–ø—É—Å–∫: —Å–∏–º—É–ª–∏—Ä–æ–≤–∞–Ω–æ –¥–ª—è {user_id}")
        except Forbidden:
            # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –±–æ—Ç–∞
            blocked_count += 1
            logger.warning(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –±–æ—Ç–∞. –î–µ–∞–∫—Ç–∏–≤–∏—Ä—É–µ–º.")
            if not dry_run:
                await save_user_data(user_id, is_active=False)
        except Exception as e:
            logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}: {e}")
        
        # –°–ê–ú–ê–Ø –í–ê–ñ–ù–ê–Ø –ß–ê–°–¢–¨: –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –∑–∞—â–∏—Ç—ã –æ—Ç –±–∞–Ω–∞
        # 1 —Å–µ–∫—É–Ω–¥–∞ ‚Äî –±–µ–∑–æ–ø–∞—Å–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞. –ù–µ –¥–µ–ª–∞–π—Ç–µ –µ–µ –º–µ–Ω—å—à–µ.
        await asyncio.sleep(1)

    logger.info("–†–∞—Å—Å—ã–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.")
    logger.info(f"–í—Å–µ–≥–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {sent_count}. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª–æ –±–æ—Ç–∞: {blocked_count}.")


if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="–°–∫—Ä–∏–ø—Ç –¥–ª—è –º–∞—Å—Å–æ–≤–æ–π —Ä–∞—Å—Å—ã–ª–∫–∏ –≤ Telegram-–±–æ—Ç–µ")
    parser.add_argument('--dry-run', action='store_true', help="–°–∏–º—É–ª–∏—Ä–æ–≤–∞—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É –±–µ–∑ —Ä–µ–∞–ª—å–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π")
    args = parser.parse_args()
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
    asyncio.run(main(dry_run=args.dry_run))
